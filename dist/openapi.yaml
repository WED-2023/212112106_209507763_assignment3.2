openapi: 3.0.0
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/abedshowgan-17f/212112106_209507763_hw3.1/1.0.1
info:
  description: This is an API designed for users to create, share and explore recipes and create family recipes
  version: 1.0.1
  title: Recipe Sharing API
  contact:
    name: Abed
    email: showganabed@gmail.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'

  
tags:
  - name: admins
    description: Secured Admin-only calls
  - name: developers
    description: Operations available to regular developers
paths:
  /:
    get:
      tags: [public]
      summary: Get homepage with 3 random recipes
      operationId: getHomePage
      responses:
        '200':
          description: Home page content with 3 random recipes

  /about:
    get:
      tags: [public]
      summary: Get about page info
      operationId: getAbout
      responses:
        '200':
          description: About page info
  /users:
    get:
      tags:
        - users
      summary: Searches for users
      operationId: searchUsers
      description: |
        Allows searching users by providing search criteria. Users can be filtered by 
        username, first name, last name, etc. Pagination options are available.
      parameters:
        - in: query
          name: searchString
          description: Optional search string to filter users based on their username, first name, or last name.
          required: false
          schema:
            type: string
        - in: query
          name: skip
          description: Number of records to skip for pagination.
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
        - in: query
          name: limit
          description: Maximum number of records to return (for pagination).
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 50
      responses:
        '200':
          description: A list of users matching the search criteria.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '400':
          description: Bad input parameter.
    post:
      tags:
        - admins
      summary: Creates a new user
      operationId: createUser
      description: |
        Allows admins to create a new user. All required fields (username, first name, 
        last name, country, password, etc.) must be provided.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        description: User details for creating a new user.
      responses:
        '201':
          description: User created successfully.
        '400':
          description: Invalid input or missing required fields.
        '409':
          description: A user with the same username already exists.
        
        
  /recipes:
    get:
      summary: Get 3 random recipes for homepage
      description: Returns 3 random recipes. Used on homepage to display rotating content.
      operationId: getRandomRecipes
      tags:
        - recipes
      responses:
        '200':
          description: 3 random recipe previews
          content:
            application/json:
              schema:
                type: array
                minItems: 3
                maxItems: 3
                items:
                  $ref: '#/components/schemas/RecipePreview'
        '500':
          description: Server error
          
          
  /recipes/search:
    get:
      tags:
        - recipes
      summary: Search for recipes with optional filters
      operationId: searchRecipes
      description: |
        Search recipes by name and optionally filter by cuisine, diet, intolerance, and result limit, latest search results are displayed if they are available.
      parameters:
        - name: query
          in: query
          required: true
          schema:
            type: string
          description: Recipe name or keywords to search for
        - name: cuisine
          in: query
          required: false
          schema:
            type: string
          description: Type of cuisine to filter by (e.g., Italian, Mexican)
        - name: diet
          in: query
          required: false
          schema:
            type: string
          description: Type of diet to filter by (e.g., vegetarian, keto)
        - name: intolerance
          in: query
          required: false
          schema:
            type: string
          description: Comma-separated list of intolerances (e.g., gluten, dairy)
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            enum: [5, 10, 15]
            default: 5
          description: Number of recipes to return (default is 5)
      responses:
        '200':
          description: List of recipes matching the search criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecipePreview'
        '400':
          description: Invalid search parameters
  
   
  /users/family-recipes:
    get:
      tags: [family-recipes]
      summary: Get family recipes for a specific user

      responses:
        '200':
          description: A list of family recipes for the user
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FamilyRecipe'

    post:
      tags: [family-recipes]
      summary: Add a new family recipe for a user

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FamilyRecipe'
      responses:
        '201':
          description: Family recipe created

  /users/favorite-recipes:
    get:
      tags: [recipes]
      summary: Get user's favorite recipes
 
      responses:
        '200':
          description: A list of favorite recipes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecipePreview'

    post:
      tags: [recipes]
      summary: Add a recipe to user's favorites
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [recipe_id]
              properties:
                recipe_id:
                  type: string
                  format: uuid
      responses:
        '200':
          description: Recipe added to favorites

    delete:
      tags: [recipes]
      summary: Remove a recipe from user's favorites

      responses:
        '200':
          description: Recipe removed from favorites
          
  
  /auth/register:
    post:
      tags: [auth]
      summary: Register new user
      operationId: registerUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User registered
        '400':
          description: Validation error
          

  /auth/login:
    post:
      tags: [auth]
      summary: Log in a user
      operationId: loginUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        '401':
          description: Invalid credentials

  /auth/logout:
    post:
      tags: [auth]
      summary: Log out a user
      operationId: logoutUser
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Logged out successfully
          
  /user/greeting:
    get:
      tags: [auth]
      summary: Get personalized greeting message
      operationId: getGreeting
      responses:
        '200':
          description: Greeting message with first name

  /recipes/create:
    get:
      tags:
        - recipes
      summary: Get create recipe form data
      operationId: getCreateRecipePage
      description: |
        Returns metadata or dynamic values needed to render the Create Recipe page.
        Could include things like list of available ingredients or validation hints.
      responses:
        '200':
          description: Data for the Create Recipe page
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Ready to create a recipe

    post:
      tags:
        - recipes
      summary: Create a new recipe
      operationId: createRecipe
      description: |
        Creates a new recipe with all required preview fields, ingredients list, 
        preparation steps, and number of meals.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewRecipe'
      responses:
        '201':
          description: Recipe successfully created
        '400':
          description: Invalid input or missing required fields

  /recipes/{recipeId}:
    get:
      tags:
        - recipes
      summary: Get full recipe details
      operationId: getRecipeById
      description: |
        Returns the full recipe details including preview fields, ingredients list,
        instructions, and number of meals.
      parameters:
        - name: recipeId
          in: path
          required: true
          schema:
            type: string
          description: ID of the recipe to retrieve
      responses:
        '200':
          description: Full recipe details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipe'
        '404':
          description: Recipe not found
components:
  securitySchemes: 
      bearerAuth:
        type: http
        scheme: bearer
        bearerFormat: JWT
  schemas:
    User:
      type: object
      required:
        - username
        - first_name
        - last_name
        - country
        - password
        - password_confirmation
        - email
      properties:
        username:
          type: string
          minLength: 3
          maxLength: 8
          pattern: '^[A-Za-z]+$'
        first_name:
          type: string
        last_name:
          type: string
        country:
          type: string
          description: Use values from https://restcountries.com/v3.1/all
        password:
          type: string
          pattern: '^(?=.*[0-9])(?=.*[^A-Za-z0-9]).{5,10}$'
        password_confirmation:
          type: string
        email:
          type: string
          format: email
          
    
    UserLogin:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
        password:
          type: string

    NewRecipe:
      type: object
      required:
        - recipe_image
        - recipe_title
        - prep_duration
        - popularity
        - vegetarian
        - vegan
        - gluten_free
        - clicked_by_user
        - saved_by_user
        - ingredients
        - instructions
        - amount_of_meals
      properties:
        recipe_image:
          type: string
          format: uri
          example: https://example.com/image.jpg
        recipe_title:
          type: string
          example: Chocolate Cake
        prep_duration:
          type: string
          example: 00:45:00
          description: Preparation time in HH:MM:SS format
        popularity:
          type: integer
          example: 152
        vegetarian:
          type: boolean
        vegan:
          type: boolean
        gluten_free:
          type: boolean
        clicked_by_user:
          type: boolean
        saved_by_user:
          type: boolean
        ingredients:
          type: array
          description: List of ingredients and their amounts
          items:
            type: object
            required: [name, amount]
            properties:
              name:
                type: string
                example: Sugar
              amount:
                type: string
                example: "2 cups"
        instructions:
          type: string
          example: |
            1. Preheat the oven to 180°C.
            2. Mix all ingredients.
            3. Bake for 30 minutes.
        amount_of_meals:
          type: integer
          example: 4

    Recipe:
      allOf:
        - $ref: '#/components/schemas/NewRecipe'
        - type: object
          required:
            - id
          properties:
            id:
              type: string
              example: 123e4567-e89b-12d3-a456-426614174000

    FamilyRecipe:
      type: object
      required: [recipe_author, recipe_season, recipe_ingredients, recipe_instructions]
      properties:
        recipe_author:
          type: string
        recipe_season:
          type: string
        recipe_ingredients:
          type: array
          items:
            type: string
        recipe_instructions:
          type: string


    RecipePreview:
      type: object
      required:
        - recipe_image
        - recipe_title
        - prep_duration
        - popularity
        - vegetarian
        - vegan
        - gluten_free
        - clicked_by_user
        - saved_by_user
      properties:
        recipe_image:
          type: string
          format: uri
        recipe_title:
          type: string
        prep_duration:
          type: string
          example: "00:30:00"
        popularity:
          type: integer
        vegetarian:
          type: boolean
        vegan:
          type: boolean
        gluten_free:
          type: boolean
        clicked_by_user:
          type: boolean
        saved_by_user:
          type: boolean